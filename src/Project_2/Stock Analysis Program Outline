Part 1

1. Go to Yahoo Finance
2. Find a stock you want to monitor
3. Download historical data to get CSV.
4. Open the CSV in excel and graph things.
5. Use your existing CSV loading code, load the data into several arraylists.
  * or, write a data structure to hold values for any given day, and load the data structure.
6. Call your smoothing algorithm on it.
7. Overlay the different pieces in Excel with the smoothed counterpart.


Part 2

1. Continuing after you load CSV data
2. Write a program where you initialize a starting balance
3. Read one line of the CSV at a time
4. at each line of the CSV, your program has a job. it will either buy some amount of shares, sell, or do nothing.
5. Come up with some idea or pattern when the program should buy, sell, or do nothing.
 * Use Heuristics to help decision:
  What's the mean so far?
  Variance? Std Dev?
6. Track your total net worth. (ie. every run updates the total based on your held shares of stocks)

Software Engineering Side:
1. Write a program with a loop loading single lines of csv.
2. Load the data into a data structure of your choice.
3. Write a method updateInternalData: Update calculations of heuristics to mean, etc.
4. Abstract out into its own method the tradeEvaluator which will return the number of shares to buy or sell.
 * represent as an int that's positive (buy) or negative (sell) or 0 (do nothing).
   * use step 4 results that are stored in memory to make a decision.
   * keep it simple!
   * you can write more than one evaluator and test different ideas.
5. write a method to calculate Relative Strength Index.
   * search Google macroption.com for calculation steps.

Ideas for buying selling or staying
* closing average
* take moving average of close up to current
* if average is higher than current sell
* if lower buy
* if approx equal stay
* research using p/e ratio for buy sell decision
* look at RSI
